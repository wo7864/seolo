{"version":3,"sources":["images/back2.png","images/logo.png","TextItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TextItem","_ref","text","id","handleClick","react_default","a","createElement","onClick","axios","defaults","xsrfCookieName","xsrfHeaderName","App","state","sParam1","sParam2","sParam3","sParam4","sParam5","value","submit","names","textList","_handleSliderChange1","event","_this","setState","target","_handleSliderChange2","_handleSliderChange3","_handleSliderChange4","_handleSliderChange5","_handleTextChange","name","_handleTextSubmit","post","param1","param2","param3","param4","param5","then","res","_renderText","concat","get","data","catch","err","console","log","_deleteText","delete","this","_this2","bgStyle","backgroundImage","require","position","top","left","width","height","nameList","map","index","key","src","alt","className","style","fontSize","fontWeight","marginTop","marginBottom","type","onChange","borderRadius","border","backgroundColor","color","src_TextItem","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41bf169e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back2.15196b7a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ae3ce018.png\";","import React from \"react\";\r\n\r\nconst TextItem = ({ text, id, handleClick }) => {\r\n  return (\r\n    <div>\r\n      <p>{text}</p>\r\n      <button onClick={() => handleClick(id)}>삭제</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextItem;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport TextItem from \"./TextItem\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    sParam1 : \"50\",\r\n    sParam2 : \"40\",\r\n    sParam3 : \"30\",\r\n    sParam4 : \"20\",\r\n    sParam5 : \"10\",\r\n    value: \"\", // 사용자가 입력한 텍스트\r\n    submit: \"default\",//제출된 텍스트를 담을 곳 , default 이미지가 존재해야함\r\n    names : [],\r\n    textList: []\r\n  };\r\n  \r\n  componentDidMount() {\r\n    this._renderText();\r\n  }\r\n  render() {\r\n    const bg=require('./images/back2.png')\r\n    const bgStyle ={\r\n      backgroundImage: \"url(\"+bg+\")\",\r\n      position: 'absolute',\r\n      top:'0', \r\n      left: '0',\r\n      width: '100%',\r\n      height: '100%',\r\n    }\r\n    const styleTitle = {\r\n      fontSize : '80px',\r\n      fontWeight : 'bold',\r\n    }\r\n    const styleSubTitle = {\r\n      fontSize : '20px',\r\n      fontWeight : 'bold',\r\n    }\r\n    const styleSubmit ={\r\n      border : '0',\r\n      borderRadius : '10px',\r\n      backgroundColor : '#555555',\r\n      width:'200px',\r\n      color:'white',\r\n      height:'25px',\r\n    }\r\n    const logoSize ={\r\n      width: '350px',\r\n      height: '225px',\r\n      marginTop:'-60px',\r\n      marginBottom:'-40px',\r\n    }\r\n    const inputStyle ={\r\n      width: '200px',\r\n      borderRadius:'10px',\r\n      height:'20px',\r\n    }\r\n    const { textList } = this.state;\r\n    //step 3.src 부분에 {name} 나중에 넣어주면 됨 왜냐하면 name 값에 url이 들어갈 거기 때문 현재는 고정 src로 테스트\r\n    const nameList = this.state.names.map( (name,index) => (<img key={index} src={name} alt=\"이미지 찾지 못함\"/>));\r\n    return (\r\n      <div className=\"App\"  style ={ bgStyle}>\r\n      <br/>\r\n      <br/>\r\n      <br/>\r\n      <p style={styleSubTitle}>예쁜 손글씨를 빠르게 만들어보세요!</p>\r\n        <img src={require('./images/logo.png')} style={logoSize}/>\r\n        <div>\r\n          <p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.value}\r\n              onChange={this._handleTextChange}\r\n              style={inputStyle}\r\n            />\r\n          </p>\r\n          <button style={styleSubmit} onClick={this._handleTextSubmit}>제출</button>\r\n          <br/><br/>\r\n          Bold - low <input type=\"range\" value={this.state.sParam1}  onChange={this._handleSliderChange1}/>\r\n          <br/>\r\n          Bold - high <input type=\"range\" value={this.state.sParam2}  onChange={this._handleSliderChange2}/>\r\n          <br/>\r\n          Italic - low <input type=\"range\" value={this.state.sParam3}  onChange={this._handleSliderChange3}/>\r\n          <br/>\r\n          Italic - high <input type=\"range\" value={this.state.sParam4}  onChange={this._handleSliderChange4}/>\r\n          <br/>\r\n          Kerning &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type=\"range\" value={this.state.sParam5}  onChange={this._handleSliderChange5}/>\r\n          <br/>\r\n        </div>\r\n        {textList.map((text, index) => {\r\n          return (\r\n            <TextItem\r\n              text={text.text}\r\n              key={index}\r\n              id={text.id}\r\n              handleClick={this._deleteText}\r\n            />\r\n          );\r\n        })}\r\n        <br/>\r\n       {nameList}\r\n      </div>\r\n    );\r\n  }\r\n  _handleSliderChange1 = event => {\r\n    this.setState({ sParam1 : event.target.value });\r\n  };\r\n  _handleSliderChange2 = event => {\r\n    this.setState({ sParam2 : event.target.value });\r\n  };\r\n  _handleSliderChange3 = event => {\r\n    this.setState({ sParam3 : event.target.value });\r\n  };\r\n  _handleSliderChange4 = event => {\r\n    this.setState({ sParam4 : event.target.value });\r\n  };\r\n  _handleSliderChange5 = event => {\r\n    this.setState({ sParam5 : event.target.value });\r\n  };\r\n  _handleTextChange = event => {\r\n    this.setState({ value : event.target.value });\r\n    this.setState({  name : event.target.value /*step 1.여기에 생성된 이미지의 url을 주면 됨*/ });\r\n  };\r\n  _handleTextSubmit = () => {\r\n    const { value } = this.state;\r\n    const { sParam1 } = this.state;\r\n    const { sParam2 } = this.state;\r\n    const { sParam3 } = this.state;\r\n    const { sParam4 } = this.state;\r\n    const { sParam5 } = this.state;\r\n    //텍스트 박스에 있는 내용을 value에 담고 그걸 this.state.submit에 넣어줌\r\n    this.setState({ submit : value });\r\n    this.setState({ sParam1 : sParam1 });\r\n    this.setState({ sParam2 : sParam2 });\r\n    this.setState({ sParam3 : sParam3 });\r\n    this.setState({ sParam4 : sParam4 });\r\n    this.setState({ sParam5 : sParam5 });\r\n\r\n    axios\r\n    //calligraphy로 api명 변경 필요\r\n      .post(\"http://15.164.49.159:8000/api/callis\", {name : value, param1 : sParam1, param2 : sParam2, param3 : sParam3, param4 : sParam4, param5 : sParam5,})\r\n      .then(res =>{ \r\n        this._renderText();\r\n        this.setState({\r\n          //names : this.state.names.concat(\"url/\"+value+\"_\"+sParam1+\"_\"+sParam2+\"_\"+sParam3+\"_\"+sParam4+\"_\"+sParam5+\".png\"),/*step 2.submit된 name 값을 맵에 넣어주고 name값 초기화*/\r\n          // eslint-disable-next-line\r\n          names : this.state.names.concat(\"https://calligrapick.s3.ap-northeast-2.amazonaws.com/result/\"+value+\"_\"+sParam1+\"_\"+sParam2+\"_\"+sParam3+\"_\"+sParam4+\"_\"+sParam5+\".png\"),/*step 2.submit된 name 값을 맵에 넣어주고 name값 초기화*/\r\n          name:'',\r\n        });\r\n        \r\n      });\r\n  };\r\n  _renderText = () => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/wisesaying/\")\r\n      .then(res => this.setState({ textList: res.data }))\r\n      .catch(err => console.log(err));\r\n  };\r\n  _deleteText = id => {\r\n    axios.delete(`http://localhost:8000/api/wisesaying/${id}`).then(res => this._renderText());\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}