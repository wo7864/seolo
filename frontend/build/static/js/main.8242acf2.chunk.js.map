{"version":3,"sources":["components/pho_button.js","components/PhonemeList.js","components/ShowImage.js","components/Option.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Option","onClick","this","props","pho_name","React","Component","PhonemeList","key","data","latter_list","map","data2","i","list","data3","j","phoneme","select_phoneme","push","ShowImage","img_dir","filename","image","href","src","div_style","float","marginLeft","btn_style","width","height","ten_space","style","phoneme2","type","name","value","latter","params","onChange","change_value","onMouseUp","update_image","domain","Main","state","font","input_text","selected_latter","selected_phoneme","selected_phoneme2","create_image","bind","handleChange","fontChange","e","setState","target","axios","post","then","response","console","log","catch","latter_num","phoneme_num","slice","idx","update","$set","y","x","put","korean_latter_list","tmp","latter_idx","phoneme_idx","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8242acf2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default class Option extends React.Component {\r\n    render(){\r\n        return(\r\n            <button onClick={this.props.onClick}>\r\n                {this.props.pho_name}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Pho_button from './pho_button';\r\n\r\nexport default class PhonemeList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render(){\r\n        let key = '';\r\n        const data = this.props.latter_list.map((data2, i) =>{\r\n            let list = data2.map((data3, j) =>{\r\n                key = i + '_' + j;\r\n                if(data3.phoneme !== ' '){\r\n                    return (<Pho_button \r\n                        onClick={() => this.props.select_phoneme(i, j, data3.phoneme)} \r\n                        pho_name={data3.phoneme}\r\n                        key={key}/>)\r\n                }\r\n            })\r\n            list.push(<br key={i}/>)\r\n            return list;\r\n        })\r\n        return(\r\n            <div>\r\n                {data}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default class ShowImage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        let filename = this.props.filename\r\n\r\n        const img_dir = 'file:///C:/Users/wo786/api/static/image/'+filename;\r\n        const image = (\r\n            <a href={img_dir}>\r\n                <img src={img_dir}/>\r\n            </a>\r\n        )\r\n        return(\r\n            <div>\r\n                {image}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nconst domain = \"http://127.0.0.1:5000/calligraphy\";\r\n\r\nexport default class Option extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render(){\r\n        const div_style={\r\n            float:\"left\",\r\n            marginLeft:\"20px\"\r\n        }\r\n        const btn_style={\r\n            width:\"40px\",\r\n            height:\"40px\"\r\n        }\r\n        const move_div={\r\n            marginLeft:\"60px\"\r\n        }\r\n        const ten_space = <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n        return(\r\n            <div>\r\n                <div style={div_style}>\r\n                    <h3>{this.props.phoneme2}</h3>\r\n                    <span>p1</span>\r\n                    <input type=\"range\" name=\"p1\" value={this.props.latter_list[this.props.latter][this.props.phoneme].params[0]} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                    <span>p2</span>\r\n                    <input type=\"range\" name=\"p2\" value={this.props.latter_list[this.props.latter][this.props.phoneme].params[1]} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                    <span>p3</span>\r\n                    <input type=\"range\" name=\"p3\" value={this.props.latter_list[this.props.latter][this.props.phoneme].params[2]} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                    <span>p4</span>\r\n                    <input type=\"range\" name=\"p4\" value={this.props.latter_list[this.props.latter][this.props.phoneme].params[3]} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                </div>\r\n                <div style={div_style}>\r\n                    <div style={move_div}>\r\n                        {ten_space}\r\n                        <button name=\"up\" onClick={this.props.change_value} style={btn_style}>↑</button><br/>\r\n                        <button name=\"left\" onClick={this.props.change_value} style={btn_style}>←</button>\r\n                        {ten_space}&nbsp;\r\n                        <button name=\"right\" onClick={this.props.change_value} style={btn_style}>→</button><br/>\r\n                        {ten_space}\r\n                        <button name=\"down\" onClick={this.props.change_value} style={btn_style}>↓</button>\r\n                    </div>\r\n                    <br/>\r\n                    <span>width &nbsp;&nbsp;</span>\r\n                    <input type=\"range\" name=\"width\" value={this.props.latter_list[this.props.latter][this.props.phoneme].width} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                    <span>height </span>\r\n                    <input type=\"range\" name=\"height\" value={this.props.latter_list[this.props.latter][this.props.phoneme].height} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PhonemeList from './PhonemeList';\r\nimport axios from 'axios';\r\nimport ShowImage from './ShowImage';\r\nimport Option from './Option';\r\nimport update from 'react-addons-update';\r\n\r\nconst domain = \"http://54.180.137.204:5000/calligraphy\";\r\n\r\nexport default class Main extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            font:'type1',\r\n            input_text:'',\r\n            latter_list:[],\r\n            select_phoneme:-1,\r\n            filename:'',\r\n            selected_latter:-1,\r\n            selected_phoneme:-1,\r\n            selected_phoneme2:''\r\n        };\r\n        this.create_image = this.create_image.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.fontChange = this.fontChange.bind(this);\r\n        this.select_phoneme = this.select_phoneme.bind(this);\r\n        this.update_image = this.update_image.bind(this);\r\n        this.change_value = this.change_value.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            input_text: e.target.value\r\n        });\r\n    }\r\n    fontChange(e){\r\n        this.setState({\r\n            font: e.target.value\r\n        });\r\n    }\r\n    create_image(){\r\n        axios.post(domain, \r\n            {\r\n                input_text:this.state.input_text,\r\n                font:this.state.font,\r\n            })\r\n            .then( response => { \r\n                this.setState({\r\n                    filename:response.data.filename+\".png\",\r\n                    latter_list:response.data.latter_list\r\n                })\r\n                console.log(response);\r\n            })\r\n            .catch( response => {console.log(response);});\r\n        \r\n    }\r\n\r\n    select_phoneme(latter_num, phoneme_num, phoneme){\r\n        this.setState({\r\n            selected_latter:latter_num,\r\n            selected_phoneme:phoneme_num,\r\n            selected_phoneme2:phoneme\r\n        })\r\n    }\r\n\r\n    change_value(e){\r\n        let target = this.state.latter_list[this.state.selected_latter][this.state.selected_phoneme];\r\n        if(e.target.name.slice(0,1) == 'p'){\r\n            let idx = 0;\r\n            if(e.target.name === 'p1') idx = 0;\r\n            else if(e.target.name === 'p2') idx=1;\r\n            else if(e.target.name === 'p3') idx=2;\r\n            else if(e.target.name === 'p4') idx=3;\r\n            target.params[idx] = e.target.value;\r\n            this.setState({latter_list: update(this.state.latter_list, \r\n                {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n        }\r\n        else{\r\n            if(e.target.name === 'width') {\r\n                target.width = e.target.value;\r\n                this.setState({latter_list: update(this.state.latter_list, \r\n                    {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n            } else if(e.target.name === 'height'){\r\n                target.height = e.target.value;\r\n                this.setState({latter_list: update(this.state.latter_list, \r\n                    {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n            }\r\n            else{\r\n                if(e.target.name === 'up') {\r\n                    target.y--;\r\n                    this.setState({latter_list: update(this.state.latter_list, \r\n                        {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n                }\r\n                else if(e.target.name === 'down') {\r\n                    target.y++;\r\n                    this.setState({latter_list: update(this.state.latter_list, \r\n                        {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n                }\r\n                else if(e.target.name === 'left') {\r\n                    target.x--;\r\n                    this.setState({latter_list: update(this.state.latter_list, \r\n                        {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n                }\r\n                else if(e.target.name === 'right') {\r\n                    target.x++;\r\n                    this.setState({latter_list: update(this.state.latter_list, \r\n                        {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n                }\r\n                this.update_image();\r\n            }\r\n        }\r\n    }\r\n\r\n    update_image(){\r\n        let data = this.state.latter_list;\r\n        let target = this.state.latter_list[this.state.selected_latter][this.state.selected_phoneme];\r\n        data[this.state.selected_latter][this.state.selected_phoneme].params = \r\n            [target.params[0], target.params[1], target.params[2], target.params[3]];\r\n        data[this.state.selected_latter][this.state.selected_phoneme].x = target.x;\r\n        data[this.state.selected_latter][this.state.selected_phoneme].y = target.y;\r\n        data[this.state.selected_latter][this.state.selected_phoneme].width = target.width;\r\n        data[this.state.selected_latter][this.state.selected_phoneme].height = target.height;\r\n        axios.put(domain, {\r\n            latter_list:[data],\r\n            latter_num: this.state.selected_latter,\r\n            phoneme_num: this.state.selected_phoneme,\r\n            input_text: this.state.input_text\r\n        })\r\n            .then( response => {\r\n                this.setState({\r\n                    filename:response.data.filename+\".png\",\r\n                    latter_list:response.data.latter_list\r\n                })\r\n            })\r\n            .catch( response => {console.log(response);});\r\n    }\r\n\r\n    render(){\r\n        let korean_latter_list = [];\r\n        let tmp = [];\r\n        let latter_idx=0;\r\n        let phoneme_idx=0;\r\n        for(let i of this.state.latter_list){\r\n            tmp = [];\r\n            for(let j of i){\r\n                tmp.push([j.phoneme, latter_idx, phoneme_idx]);\r\n                phoneme_idx++;\r\n            }\r\n            latter_idx++;\r\n            korean_latter_list.push(tmp);\r\n        }\r\n        return(\r\n            <div>\r\n                <h1>서로 - 서예 로봇</h1>\r\n                <span>폰트종류: </span>\r\n                <select onChange={this.fontChange}>\r\n                    <option value=\"type1\">동그란 글씨</option>\r\n                    <option value=\"type2\">날린 글씨</option>\r\n                    <option value=\"type3\">구수한 글씨</option>\r\n                </select>\r\n                <br/>\r\n                <input\r\n                    placeholder=\"한글을 입력해주세요.\"\r\n                    name=\"input_text\"\r\n                    value={this.state.input_text}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                <button onClick={this.create_image}>생성</button>\r\n                <br/>\r\n                <PhonemeList \r\n                    update_image={this.update_image}\r\n                    latter_list={this.state.latter_list}\r\n                    input_text={this.state.input_text}\r\n                    select_phoneme={this.select_phoneme}\r\n                    latter={this.state.selected_latter}\r\n                    phoneme={this.state.selected_phoneme}\r\n                    phoneme2={this.state.selected_phoneme2}\r\n                />\r\n                {this.state.selected_phoneme != -1 && \r\n                <Option latter={this.state.selected_latter}\r\n                    phoneme={this.state.selected_phoneme}\r\n                    phoneme2={this.state.selected_phoneme2}\r\n                    latter_list={this.state.latter_list}\r\n                    update_image={this.update_image}\r\n                    input_text={this.state.input_text}\r\n                    change_value={this.change_value}\r\n                    />\r\n                }\r\n                <br/>\r\n                {this.state.filename !== '' ? <ShowImage filename={this.state.filename}/> : ''}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nfunction App() {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}