{"version":3,"sources":["components/pho_button.js","components/PhonemeList.js","components/ShowImage.js","components/Option.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Option","onClick","this","props","pho_name","React","Component","PhonemeList","key","data","latter_list","map","data2","i","list","data3","j","phoneme","select_phoneme","push","ShowImage","filename","len","length","img_dir","slice","image","href","src","div_style","float","marginLeft","btn_style","width","height","ten_space","style","phoneme2","type","name","value","latter","params","onChange","change_value","onMouseUp","update_image","domain","Main","state","font","input_text","selected_latter","selected_phoneme","selected_phoneme2","create_image","bind","handleChange","fontChange","e","setState","target","axios","post","then","response","console","log","catch","latter_num","phoneme_num","idx","update","$set","y","x","put","korean_latter_list","tmp","latter_idx","phoneme_idx","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3be13bac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default class Option extends React.Component {\r\n    render(){\r\n        return(\r\n            <button onClick={this.props.onClick}>\r\n                {this.props.pho_name}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Pho_button from './pho_button';\r\n\r\nexport default class PhonemeList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render(){\r\n        let key = '';\r\n        const data = this.props.latter_list.map((data2, i) =>{\r\n            let list = data2.map((data3, j) =>{\r\n                key = i + '_' + j;\r\n                if(data3.phoneme !== ' '){\r\n                    return (<Pho_button \r\n                        onClick={() => this.props.select_phoneme(i, j, data3.phoneme)} \r\n                        pho_name={data3.phoneme}\r\n                        key={key}/>)\r\n                }\r\n            })\r\n            list.push(<br key={i}/>)\r\n            return list;\r\n        })\r\n        return(\r\n            <div>\r\n                {data}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default class ShowImage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        let filename = this.props.filename;\r\n        let len = filename.length;\r\n        filename = filename.slice(0, len-4);\r\n        const img_dir = 'http://seolo.s3-website.ap-northeast-2.amazonaws.com/static/image/'+filename;\r\n        const image = (\r\n            <a href={img_dir}>\r\n                <img src={img_dir}/>\r\n            </a>\r\n        )\r\n        return(\r\n            <div>\r\n                {image}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nconst domain = \"http://127.0.0.1:5000/calligraphy\";\r\n\r\nexport default class Option extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render(){\r\n        const div_style={\r\n            float:\"left\",\r\n            marginLeft:\"20px\"\r\n        }\r\n        const btn_style={\r\n            width:\"40px\",\r\n            height:\"40px\"\r\n        }\r\n        const move_div={\r\n            marginLeft:\"60px\"\r\n        }\r\n        const ten_space = <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n        return(\r\n            <div>\r\n                <div style={div_style}>\r\n                    <h3>{this.props.phoneme2}</h3>\r\n                    <span>p1</span>\r\n                    <input type=\"range\" name=\"p1\" value={this.props.latter_list[this.props.latter][this.props.phoneme].params[0]} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                    <span>p2</span>\r\n                    <input type=\"range\" name=\"p2\" value={this.props.latter_list[this.props.latter][this.props.phoneme].params[1]} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                    <span>p3</span>\r\n                    <input type=\"range\" name=\"p3\" value={this.props.latter_list[this.props.latter][this.props.phoneme].params[2]} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                    <span>p4</span>\r\n                    <input type=\"range\" name=\"p4\" value={this.props.latter_list[this.props.latter][this.props.phoneme].params[3]} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                </div>\r\n                <div style={div_style}>\r\n                    <div style={move_div}>\r\n                        {ten_space}\r\n                        <button name=\"up\" onClick={this.props.change_value} style={btn_style}>↑</button><br/>\r\n                        <button name=\"left\" onClick={this.props.change_value} style={btn_style}>←</button>\r\n                        {ten_space}&nbsp;\r\n                        <button name=\"right\" onClick={this.props.change_value} style={btn_style}>→</button><br/>\r\n                        {ten_space}\r\n                        <button name=\"down\" onClick={this.props.change_value} style={btn_style}>↓</button>\r\n                    </div>\r\n                    <br/>\r\n                    <span>width &nbsp;&nbsp;</span>\r\n                    <input type=\"range\" name=\"width\" value={this.props.latter_list[this.props.latter][this.props.phoneme].width} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                    <span>height </span>\r\n                    <input type=\"range\" name=\"height\" value={this.props.latter_list[this.props.latter][this.props.phoneme].height} \r\n                        onChange={this.props.change_value} onMouseUp={this.props.update_image}/><br/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PhonemeList from './PhonemeList';\r\nimport axios from 'axios';\r\nimport ShowImage from './ShowImage';\r\nimport Option from './Option';\r\nimport update from 'react-addons-update';\r\n\r\nconst domain = \"http://52.79.89.171:5000/calligraphy\";\r\n//const domain =\"http://127.0.0.1:5000/calligraphy\";\r\nexport default class Main extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            font:'0',\r\n            input_text:'',\r\n            latter_list:[],\r\n            select_phoneme:-1,\r\n            filename:'',\r\n            selected_latter:-1,\r\n            selected_phoneme:-1,\r\n            selected_phoneme2:''\r\n        };\r\n        this.create_image = this.create_image.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.fontChange = this.fontChange.bind(this);\r\n        this.select_phoneme = this.select_phoneme.bind(this);\r\n        this.update_image = this.update_image.bind(this);\r\n        this.change_value = this.change_value.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            input_text: e.target.value\r\n        });\r\n    }\r\n    fontChange(e){\r\n        this.setState({\r\n            font: e.target.value\r\n        });\r\n    }\r\n    create_image(){\r\n        axios.post(domain, \r\n            {\r\n                input_text:this.state.input_text,\r\n                font:this.state.font,\r\n            })\r\n            .then( response => { \r\n                this.setState({\r\n                    filename:response.data.filename+\".png\",\r\n                    latter_list:response.data.latter_list\r\n                })\r\n                console.log(response);\r\n            })\r\n            .catch( response => {console.log(response);});\r\n        \r\n    }\r\n\r\n    select_phoneme(latter_num, phoneme_num, phoneme){\r\n        this.setState({\r\n            selected_latter:latter_num,\r\n            selected_phoneme:phoneme_num,\r\n            selected_phoneme2:phoneme\r\n        })\r\n    }\r\n\r\n    change_value(e){\r\n        let target = this.state.latter_list[this.state.selected_latter][this.state.selected_phoneme];\r\n        if(e.target.name.slice(0,1) == 'p'){\r\n            let idx = 0;\r\n            if(e.target.name === 'p1') idx = 0;\r\n            else if(e.target.name === 'p2') idx=1;\r\n            else if(e.target.name === 'p3') idx=2;\r\n            else if(e.target.name === 'p4') idx=3;\r\n            target.params[idx] = e.target.value;\r\n            this.setState({latter_list: update(this.state.latter_list, \r\n                {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n        }\r\n        else{\r\n            if(e.target.name === 'width') {\r\n                target.width = e.target.value;\r\n                this.setState({latter_list: update(this.state.latter_list, \r\n                    {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n            } else if(e.target.name === 'height'){\r\n                target.height = e.target.value;\r\n                this.setState({latter_list: update(this.state.latter_list, \r\n                    {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n            }\r\n            else{\r\n                if(e.target.name === 'up') {\r\n                    target.y--;\r\n                    this.setState({latter_list: update(this.state.latter_list, \r\n                        {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n                }\r\n                else if(e.target.name === 'down') {\r\n                    target.y++;\r\n                    this.setState({latter_list: update(this.state.latter_list, \r\n                        {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n                }\r\n                else if(e.target.name === 'left') {\r\n                    target.x--;\r\n                    this.setState({latter_list: update(this.state.latter_list, \r\n                        {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n                }\r\n                else if(e.target.name === 'right') {\r\n                    target.x++;\r\n                    this.setState({latter_list: update(this.state.latter_list, \r\n                        {[this.state.selected_latter]:{[this.state.selected_phoneme]:{$set: target}}})})\r\n                }\r\n                this.update_image();\r\n            }\r\n        }\r\n    }\r\n\r\n    update_image(){\r\n        let data = this.state.latter_list;\r\n        let target = this.state.latter_list[this.state.selected_latter][this.state.selected_phoneme];\r\n        data[this.state.selected_latter][this.state.selected_phoneme].params = \r\n            [target.params[0], target.params[1], target.params[2], target.params[3]];\r\n        data[this.state.selected_latter][this.state.selected_phoneme].x = target.x;\r\n        data[this.state.selected_latter][this.state.selected_phoneme].y = target.y;\r\n        data[this.state.selected_latter][this.state.selected_phoneme].width = target.width;\r\n        data[this.state.selected_latter][this.state.selected_phoneme].height = target.height;\r\n        axios.put(domain, {\r\n            font:this.state.font,\r\n            latter_list:[data],\r\n            latter_num: this.state.selected_latter,\r\n            phoneme_num: this.state.selected_phoneme,\r\n            input_text: this.state.input_text\r\n        })\r\n            .then( response => {\r\n                this.setState({\r\n                    filename:response.data.filename+\".png\",\r\n                    latter_list:response.data.latter_list\r\n                })\r\n            })\r\n            .catch( response => {console.log(response);});\r\n    }\r\n\r\n    render(){\r\n        let korean_latter_list = [];\r\n        let tmp = [];\r\n        let latter_idx=0;\r\n        let phoneme_idx=0;\r\n        for(let i of this.state.latter_list){\r\n            tmp = [];\r\n            for(let j of i){\r\n                tmp.push([j.phoneme, latter_idx, phoneme_idx]);\r\n                phoneme_idx++;\r\n            }\r\n            latter_idx++;\r\n            korean_latter_list.push(tmp);\r\n        }\r\n        return(\r\n            <div>\r\n                <h1>서로 - 서예 로봇</h1>\r\n                <span>폰트종류: </span>\r\n                <select onChange={this.fontChange}>\r\n                    <option value=\"0\">날린 글씨</option>\r\n                    <option value=\"1\">구수한 글씨</option>\r\n                    <option value=\"2\">동그란 글씨</option>\r\n                </select>\r\n                <br/>\r\n                <input\r\n                    placeholder=\"한글을 입력해주세요.\"\r\n                    name=\"input_text\"\r\n                    value={this.state.input_text}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                <button onClick={this.create_image}>생성</button>\r\n                <br/>\r\n                <PhonemeList \r\n                    update_image={this.update_image}\r\n                    latter_list={this.state.latter_list}\r\n                    input_text={this.state.input_text}\r\n                    select_phoneme={this.select_phoneme}\r\n                    latter={this.state.selected_latter}\r\n                    phoneme={this.state.selected_phoneme}\r\n                    phoneme2={this.state.selected_phoneme2}\r\n                />\r\n                {this.state.selected_phoneme != -1 && \r\n                <Option latter={this.state.selected_latter}\r\n                    phoneme={this.state.selected_phoneme}\r\n                    phoneme2={this.state.selected_phoneme2}\r\n                    latter_list={this.state.latter_list}\r\n                    update_image={this.update_image}\r\n                    input_text={this.state.input_text}\r\n                    change_value={this.change_value}\r\n                    />\r\n                }\r\n                <br/>\r\n                {this.state.filename !== '' ? <ShowImage filename={this.state.filename}/> : ''}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Main from './components/Main';\r\nfunction App() {\r\n  return (\r\n    <Main/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}